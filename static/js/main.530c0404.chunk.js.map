{"version":3,"sources":["Weather.js","App.js","index.js"],"names":["Weather","props","fetchData","cityName","url","console","log","axios","get","then","res","status","setState","weather","data","state","city","bind","this","prevProps","main","className","name","temp","description","feels_like","React","Component","App","handleClick","e","preventDefault","document","getElementById","value","picUrl","images","downsized","src","type","id","placeholder","onClick","ReactDOM","render","StrictMode"],"mappings":"6TAsDeA,G,wDAjDX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IASVC,UAAY,SAACC,GACT,IACMC,EAAG,4DAAwDD,EAAxD,kBADG,mCACH,iBACTE,QAAQC,IAAIF,GACZG,IAAMC,IAAIJ,GAAKK,MAAK,SAACC,GACjBL,QAAQC,IAAII,GACO,MAAfA,EAAIC,QACJ,EAAKC,SAAS,CAACC,QAASH,EAAII,WAfpC,EAAKC,MAAQ,CACTC,KAAM,WACNH,QAAS,IAEb,EAAKX,UAAY,EAAKA,UAAUe,KAAf,gBANH,E,gEAuBdC,KAAKhB,UAAUgB,KAAKH,MAAMC,Q,yCAGXG,GACXD,KAAKjB,MAAMe,OAASG,EAAUH,MAC9BE,KAAKhB,UAAUgB,KAAKjB,MAAMe,Q,+BAIzB,IACGH,EAAYK,KAAKH,MAAjBF,QACR,OAAGA,EAAQO,KAEH,yBAAKC,UAAU,UACX,6BAAMR,EAAQS,MACd,uCAAST,EAAQO,KAAKG,KAAtB,SACA,6BAAMV,EAAQA,QAAQ,GAAGW,aACzB,kDAAoBX,EAAQO,KAAKK,WAAjC,UAKL,+C,GA9COC,IAAMC,YCoDbC,E,kDAjDb,WAAY3B,GAAO,IAAD,8BAChB,cAAMA,IASR4B,YAAc,SAACC,GACbA,EAAEC,iBACF,IAAI5B,EAAW6B,SAASC,eAAe,YAAYC,MACnD,EAAKtB,SAAS,CAACI,KAAMb,KAXrB,EAAKY,MAAQ,CACXC,KAAK,GACLmB,OAAO,IAGT,EAAKN,YAAc,EAAKA,YAAYZ,KAAjB,gBAPH,E,gEAgBG,IAAD,OAGZb,EAAG,4CADG,qBACH,oBAFG,oCAGZC,QAAQC,IAAIF,GACZG,IAAMC,IAAIJ,GACLK,MAAK,SAACC,GACgB,MAAfA,EAAIC,QACN,EAAKC,SAAS,CAACuB,OAASzB,EAAII,KAAKA,KAAK,GAAGsB,OAAOC,UAAUjC,W,+BAM7D,IAEAY,EAAQE,KAAKH,MAAbC,KAEP,OACE,yBAAKK,UAAU,OACb,6BACE,yBAAKiB,IAAKpB,KAAKH,MAAMoB,UAEvB,yBAAKd,UAAU,cACb,2BAAOkB,KAAK,OAAOlB,UAAU,QAAQmB,GAAG,WAAWC,YAAY,WAC/D,4BAAQC,QAASxB,KAAKW,aAAtB,WAEF,kBAAC,EAAD,CAASb,KAAMA,S,GA5CLU,IAAMC,WCAxBgB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFb,SAASC,eAAe,W","file":"static/js/main.530c0404.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport './Weather.css';\r\n\r\nclass Weather extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            city: 'Tel Aviv',\r\n            weather: {},\r\n        };\r\n        this.fetchData = this.fetchData.bind(this);\r\n    }\r\n\r\n\r\n    fetchData = (cityName) => {\r\n        const key = 'fcbd0b49aeaedc2399b10f80545ae74a';\r\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${key}&units=metric`;\r\n        console.log(url)\r\n        axios.get(url).then((res) =>{\r\n            console.log(res);\r\n            if (res.status === 200){\r\n                this.setState({weather: res.data});\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchData(this.state.city);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.city !== prevProps.city) {\r\n            this.fetchData(this.props.city);\r\n        }\r\n    }\r\n\r\n    render(){\r\n        const { weather } = this.state;\r\n        if(weather.main){\r\n            return(\r\n                <div className=\"Result\">\r\n                    <div>{weather.name}</div>\r\n                    <div>{`${weather.main.temp}°`}</div>\r\n                    <div>{weather.weather[0].description}</div>\r\n                    <div>{`feels like ${weather.main.feels_like}°`}</div>\r\n                </div>\r\n            );        \r\n        }\r\n\r\n        return <div>Loading...</div>\r\n    }\r\n}\r\n\r\nexport default Weather; ","import React from 'react';\nimport './App.css';\nimport Weather from './Weather';\nimport axios from 'axios';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      city:\"\",\n      picUrl:\"\",\n    };\n    \n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick = (e) =>{\n    e.preventDefault();\n    var cityName = document.getElementById(\"addInput\").value;\n    this.setState({city: cityName});\n  }\n\n  componentDidMount() {\n    const key = 'rJpFA71VGRqlilGAUyTUffsNVJMTnzqL';\n    const ids = \"4N1FZFE5AGO3qrUGkw\";\n    const url = `https://api.giphy.com/v1/gifs?ids=${ids}&api_key=${key}`;  \n    console.log(url)\n    axios.get(url)\n        .then((res) => {\n            if (res.status === 200){\n              this.setState({picUrl: (res.data.data[0].images.downsized.url)})\n          }\n    });\n  }\n\n\n  render(){\n\n    const {city} = this.state;\n  \n    return (\n      <div className=\"App\">\n        <div>\n          <img src={this.state.picUrl}/>\n        </div>\n        <div className=\"search-bar\">\n          <input type=\"text\" className=\"input\" id=\"addInput\" placeholder=\"London\"/>\n          <button onClick={this.handleClick}>Search</button>\n        </div>\n        <Weather city={city}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}